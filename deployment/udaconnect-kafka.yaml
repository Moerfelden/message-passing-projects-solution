apiVersion: v1
kind: Service
metadata:
  labels:
    service: kafka-service
  name: kafka-service
spec:
  type: ClusterIP
  selector:
    service: kafka-service
  ports:
    - name: '9092'
      protocol: TCP
      port: 9092
      targetPort: 9092
    - name: '9093'
      protocol: TCP
      port: 9093
      targetPort: 9093
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: kafka-service
  name: kafka-service
spec:
  replicas: 1
  selector:
    matchLabels:
      service: kafka-service
  template:
    metadata:
      labels:
        service: kafka-service
    spec:
      containers:
        - image: docker.io/bitnami/kafka:4.0
          name: kafka-service
          imagePullPolicy: Always
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            - name: KAFKA_CFG_NODE_ID
              value: '0'
            - name: KAFKA_CFG_PROCESS_ROLES
              value: 'controller,broker'
            - name: KAFKA_CFG_LISTENERS
              value: 'PLAINTEXT://:9092,CONTROLLER://:9093'
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: 'PLAINTEXT://kafka-service:9092'
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: '0@kafka-service:9093'
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: 'CONTROLLER'
            - name: KAFKA_CFG_INTER_BROKER_LISTENER_NAME
              value: 'PLAINTEXT'
          volumeMounts:
            - mountPath: /bitnami/kafka
              name: kafka-data
      volumes:
        - name: kafka-data
          emptyDir: {}
      restartPolicy: Always
